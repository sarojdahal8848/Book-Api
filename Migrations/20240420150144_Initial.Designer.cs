// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using simple_crud.Db;

#nullable disable

namespace simple_crud.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240420150144_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("simple_crud.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 4, 20, 15, 1, 44, 240, DateTimeKind.Utc).AddTicks(4407),
                            Name = "Basic of Physics",
                            Price = 100m,
                            UpdatedAt = new DateTime(2024, 4, 20, 15, 1, 44, 240, DateTimeKind.Utc).AddTicks(4408)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 4, 20, 15, 1, 44, 240, DateTimeKind.Utc).AddTicks(4409),
                            Name = "Chemistry of Nature",
                            Price = 200m,
                            UpdatedAt = new DateTime(2024, 4, 20, 15, 1, 44, 240, DateTimeKind.Utc).AddTicks(4409)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 4, 20, 15, 1, 44, 240, DateTimeKind.Utc).AddTicks(4411),
                            Name = "Computer Programming",
                            Price = 300m,
                            UpdatedAt = new DateTime(2024, 4, 20, 15, 1, 44, 240, DateTimeKind.Utc).AddTicks(4411)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 4, 20, 15, 1, 44, 240, DateTimeKind.Utc).AddTicks(4412),
                            Name = "Mathematics",
                            Price = 150m,
                            UpdatedAt = new DateTime(2024, 4, 20, 15, 1, 44, 240, DateTimeKind.Utc).AddTicks(4413)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 4, 20, 15, 1, 44, 240, DateTimeKind.Utc).AddTicks(4414),
                            Name = "Physics of Nature",
                            Price = 250m,
                            UpdatedAt = new DateTime(2024, 4, 20, 15, 1, 44, 240, DateTimeKind.Utc).AddTicks(4415)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
